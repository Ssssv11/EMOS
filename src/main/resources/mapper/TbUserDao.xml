<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hjc.db.dao.TbUserDao">
    <select id="haveRootUser" resultType="boolean">
        select if(count(*), true, false)
        from tb_user
        where root = 1;
    </select>

    <insert id="insert" parameterType="HashMap">
        INSERT INTO tb_user
        SET
        <if test="openId!=null">
            open_id = #{openId},
        </if>
        <if test="nickname!=null">
            nickname = #{nickname},
        </if>
        <if test="photo!=null">
            photo = #{photo},
        </if>
        <if test="name!=null">
            name = #{name},
        </if>
        <if test="sex!=null">
            sex = #{sex},
        </if>
        <if test="tel!=null">
            tel = #{tel},
        </if>
        <if test="email!=null">
            email=#{email},
        </if>
        <if test="hiredate!=null">
            hiredate = #{hiredate},
        </if>
        role = #{role},
        root = #{root},
        <if test="deptName!=null">
            dept_id = ( SELECT id FROM tb_dept WHERE dept_name = #{deptName} ),
        </if>
        status = #{status},
        create_time = #{createTime}
    </insert>

    <select id="searchIdByOpenId" parameterType="String" resultType="Integer">
        SELECT id
        FROM tb_user
        WHERE open_id = #{openId}
          AND status = 1
    </select>

    <select id="searchUserPermissions" parameterType="int" resultType="String">
        SELECT DISTINCT p.permission_name
        FROM tb_user u
                 JOIN tb_role r ON JSON_CONTAINS(u.role, CAST(r.id AS CHAR))
                 JOIN tb_permission p ON JSON_CONTAINS(r.permissions, CAST(p.id AS CHAR))
        WHERE u.id = #{userId}
          AND u.status = 1;
    </select>

    <select id="searchById" parameterType="int" resultType="com.hjc.db.pojo.TbUser">
        SELECT id,
               open_id,
               nickname,
               photo,
               name,
               sex,
               tel,
               role,
               root,
               dept_id,
               status,
               create_time
        FROM tb_user
        WHERE id = #{userId}
          AND status = 1
    </select>

    <select id="searchUserHiredate" parameterType="int" resultType="String">
        SELECT hiredate
        FROM tb_user
        WHERE id = #{userId}
          AND status = 1
    </select>

    <select id="searchUserSummary" parameterType="int" resultType="HashMap">
        SELECT u.name, u.photo, d.dept_name AS deptName
        FROM tb_user u
                 LEFT JOIN tb_dept d ON u.dept_id = d.id
        WHERE u.id = #{userId}
          AND u.status = 1
    </select>

    <select id="searchUserGroupByDept" parameterType="String" resultType="HashMap">
        SELECT
        d.id AS deptId,
        d.dept_name AS deptName,
        u.id AS userId,
        u.name
        FROM tb_dept d JOIN tb_user u ON u.dept_id=d.id
        WHERE u.status=1
        <if test="keyword!=null">
            AND u.name LIKE '%${keyword}%'
        </if>
        ORDER BY d.id, u.id;
    </select>

    <select id="searchMembers" parameterType="list" resultType="HashMap">
        SELECT id,name,photo
        FROM tb_user
        WHERE status = 1
        AND id IN
        <foreach collection="list" item="one" separator="," open="(" close=")">
            #{one}
        </foreach>
    </select>

    <select id="searchUserInfo" parameterType="int" resultType="HashMap">
        SELECT u.open_id                                        AS openId,
               u.nickname,
               u.name,
               u.photo,
               u.sex,
               u.tel,
               u.email,
               d.dept_name                                      AS dept,
               u.hiredate,
               CASE u.status
                   WHEN 1 THEN "在职"
                   WHEN 2 THEN "离职"
                   END                                          AS status,
               (SELECT GROUP_CONCAT(role_name separator "，")
                FROM tb_role
                WHERE JSON_CONTAINS(u.role, CONVERT(id, CHAR))) AS roles
        FROM tb_user u
                 LEFT JOIN tb_dept d ON u.dept_id = d.id
        WHERE u.id = #{userId}
          AND u.status = 1
    </select>

    <select id="searchUserInfoById" parameterType="int" resultType="HashMap">
        SELECT u.open_id                                        AS openId,
               u.nickname,
               u.name,
               u.photo,
               u.sex,
               u.tel,
               u.email,
               d.dept_name                                      AS dept,
               u.hiredate,
               u.dept_id                                        AS deptId,
               CASE u.status
                   WHEN 1 THEN "在职"
                   WHEN 2 THEN "离职"
                   END                                          AS status,
               (SELECT GROUP_CONCAT(role_name separator "，")
                FROM tb_role
                WHERE JSON_CONTAINS(u.role, CONVERT(id, CHAR))) AS roles
        FROM tb_user u
                 LEFT JOIN tb_dept d ON u.dept_id = d.id
        WHERE u.id = #{userId}
          AND u.status = 1
    </select>

    <select id="searchDeptManagerId" parameterType="int" resultType="int">
        SELECT u2.id
        FROM tb_user u1
                 JOIN tb_user u2 ON u1.dept_id = u2.dept_id
                 JOIN tb_role r ON JSON_CONTAINS(u2.role, CAST(r.id AS CHAR))
        WHERE u1.id = #{id}
          AND r.id = 2
          AND u1.status = 1
          AND u2.status = 1
    </select>

    <select id="searchGmId" resultType="int">
        SELECT u.id
        FROM tb_user u
                 JOIN tb_role r ON JSON_CONTAINS(u.role, CAST(r.id AS CHAR))
        WHERE r.id = 1
          AND u.status = 1
    </select>

    <select id="selectUserPhotoAndName" parameterType="list" resultType="HashMap">
        SELECT
        id,name,photo
        FROM tb_user
        WHERE status = 1 AND id IN
        <foreach collection="list" open="(" close=")" item="one" separator=",">
            #{one}
        </foreach>
    </select>

    <select id="searchMemberEmail" parameterType="int" resultType="String">
        SELECT email
        FROM tb_user
        WHERE id = #{id}
          AND status = 1
    </select>

    <update id="update" parameterType="HashMap">
        UPDATE tb_user
        set
        <if test="name != null">
            name = #{name}
        </if>
        <if test="sex != null">
            ,sex = #{sex}
        </if>
        <if test="tel != null">
            ,tel = #{tel}
        </if>
        <if test="email != null">
            ,email = #{email}
        </if>
        WHERE id = #{id}
    </update>

    <update id="updateMember" parameterType="HashMap">
        UPDATE tb_user
        set
        <if test="name != null">
            name = #{name}
        </if>
        <if test="sex != null">
            ,sex = #{sex}
        </if>
        <if test="tel != null">
            ,tel = #{tel}
        </if>
        <if test="email != null">
            ,email = #{email}
        </if>
        <if test="hiredate != null">
            ,hiredate = #{hiredate}
        </if>
        <if test="deptId != null">
            ,dept_id = #{deptId}
        </if>
        WHERE id = #{id}
    </update>

    <update id="delMember" parameterType="int">
        update tb_user
        set status = 0
        where id = #{id}
    </update>

    <insert id="insertMember" parameterType="Hashmap">
        insert into tb_user(name, sex, tel, email, hiredate, role, root, dept_id, status, create_time)
        values (#{name}, #{sex}, #{tel}, #{email}, #{hiredate}, #{role}, #{root}, #{deptId}, #{status}, #{createTime})
    </insert>

    <select id="searchUserRoleGroupByDept" parameterType="String" resultType="HashMap">
        SELECT
        d.id AS deptId,
        d.dept_name AS deptName,
        u.id AS userId,
        u.name,
        u.role, r.role_name
        FROM tb_dept d JOIN tb_user u ON u.dept_id=d.id
        LEFT JOIN tb_role r on JSON_EXTRACT(u.role,'$') = JSON_ARRAY(r.id)
        WHERE u.status=1
        <if test="keyword!=null">
            AND u.name LIKE '%${keyword}%'
        </if>
        ORDER BY d.id, u.id;
    </select>

    <update id="updateUserRole" parameterType="Hashmap">
        update tb_user
        set role = #{role}
        where id = #{userId}
    </update>

    <select id="selectUserPhoto" parameterType="int" resultType="String">
        select photo from tb_user where id = #{userId}
    </select>
    <select id="selectUserName" parameterType="int" resultType="String">
        select name from tb_user where id = #{userId}
    </select>
</mapper>